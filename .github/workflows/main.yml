name: GitHub Actions Demo
on:
  push:
    tags:
      - '*'  # 只在推送标签时触发

jobs: 
  build_and_test:  
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code  # 第一步，检出代码
      uses: actions/checkout@v2

    - name: Setup Flutter  # 第二步，设置Flutter环境
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '3.22.2'  # 指定Flutter版本号

    - name: Install dependencies  # 第三步，安装依赖
      run: flutter pub get

    - name: Run tests  # 第四步，运行测试
      run: flutter test

    - name: Clean build directory  # 第五步，清理构建目录
      run: flutter clean

    - name: Get version number  # 第六步，获取版本号
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Build APK  # 第七步，构建APK
      run: flutter build apk

    - name: Move APK to dist directory  # 第八步，将APK移动到dist文件夹
      run: mv build/app/outputs/flutter-apk/app-release.apk dist/app-release-${{ env.VERSION }}.apk

    - name: Build Windows app  # 第九步，构建Windows应用
      run: flutter build windows

    - name: Create Windows ZIP  # 第十步，打包Windows应用为ZIP文件
      run: zip -r dist/windows-app-${{ env.VERSION }}.zip build/windows/runner/Release/*

    - name: Archive APK  # 第十一步，归档APK文件
      uses: actions/upload-artifact@v2
      with:
        name: release-apk
        path: dist/app-release-${{ env.VERSION }}.apk

    - name: Archive Windows ZIP  # 第十二步，归档Windows ZIP文件
      uses: actions/upload-artifact@v2
      with:
        name: release-windows
        path: dist/windows-app-${{ env.VERSION }}.zip
